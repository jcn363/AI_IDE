[package]
name = "rust-ai-ide-src-tauri"

version = "0.1.0"
description = "A Tauri App"
authors = ["jcn363"]
license = "MIT OR Apache-2.0"
repository = ""
edition = "2021"
rust-version = "1.81.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
name = "app_lib"

crate-type = ["staticlib", "cdylib", "rlib"]

[build-dependencies]
tauri-build = { workspace = true }

[dependencies]
# Workspace dependencies
anyhow = { workspace = true }
log = { workspace = true }
petgraph = { workspace = true }
regex = { workspace = true }
semver = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
tauri = { workspace = true }
tempfile = { workspace = true }
thiserror = { workspace = true }
toml = { workspace = true }
walkdir = { workspace = true }

# Direct dependencies with specific versions
cargo_metadata = { workspace = true }
glob-match = { workspace = true }
notify = { workspace = true }
rustsec = { workspace = true }
spdx = { workspace = true }
syn = { workspace = true }
tauri-plugin-dialog = { workspace = true }
tauri-plugin-fs = { workspace = true }
tauri-plugin-log = { workspace = true }

# Internal crates (only those that exist)
rust-ai-ide-core = { path = "../crates/rust-ai-ide-core" }
rust-ai-ide-lsp = { path = "../crates/rust-ai-ide-lsp", features = ["ai", "multi-language-lsp"] }
rust-ai-ide-cache = { path = "../crates/rust-ai-ide-cache" }
rust-ai-ide-plugins = { path = "../crates/rust-ai-ide-plugins" }
rust-ai-ide-types = { path = "../crates/rust-ai-ide-types" }
rust-ai-ide-shared-types = { path = "../crates/rust-ai-ide-shared-types" }
rust-ai-ide-ai-codegen = { path = "../crates/rust-ai-ide-ai-codegen" }
rust-ai-ide-common = { workspace = true, features = ["tauri-integrated"] }
rust-ai-ide-errors = { path = "../crates/rust-ai-ide-errors" }
# New cloud and integration crates
rust-ai-ide-cloud-integrations = { path = "../crates/rust-ai-ide-cloud-integrations" }
rust-ai-ide-webhooks = { path = "../crates/rust-ai-ide-webhooks" }
rust-ai-ide-connectors = { path = "../crates/rust-ai-ide-connectors" }
# AI commands delegation dependency
rust-ai-ide-commands-ai = { path = "../crates/rust-ai-ide-commands-ai" }
# AI analysis crate for advanced code analysis
rust-ai-ide-ai-analysis = { path = "../crates/rust-ai-ide-ai-analysis" }
# Collaboration features
rust-ai-ide-collaboration = { path = "../crates/rust-ai-ide-collaboration" }
# AI inference for conflict resolution
rust-ai-ide-ai-inference = { path = "../crates/rust-ai-ide-ai-inference" }
# rust-ai-ide-protocol removed: crate directory exists but missing Cargo.toml

# Observability and monitoring
rust-ai-ide-observability = { path = "../crates/rust-ai-ide-observability", features = ["metrics", "tracing", "health-checks"] }

# External dependencies for functionality
dirs = { workspace = true }
cargo-edit = { workspace = true }
license-exprs = { workspace = true }
async-trait = { workspace = true }
lazy_static = { workspace = true }

# Security components
rust-ai-ide-security = { path = "../crates/rust-ai-ide-security" }

# Configuration management for terminal validation
rust-ai-ide-config = { path = "../crates/rust-ai-ide-config" }

# External dependencies for terminal program validation
which = { workspace = true }

# Production-ready debugging components
rust-ai-ide-debugger = { path = "../crates/rust-ai-ide-debugger" }

# Rate limiting for infrastructure
governor = { workspace = true }
# Optimized tokio
tokio = { workspace = true }
chrono = { workspace = true }
uuid = { workspace = true }
dashmap = { workspace = true }
once_cell = { workspace = true }
sha2 = { workspace = true }
