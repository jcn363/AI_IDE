# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.71"
name = "objc2-io-kit"
version = "0.3.1"
build = false
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Bindings to the IOKit framework"
keywords = [
    "cocoa",
    "apple",
    "framework",
    "macos",
    "ios",
]
categories = [
    "api-bindings",
    "development-tools::ffi",
    "external-ffi-bindings",
    "os::macos-apis",
]
license = "Zlib OR Apache-2.0 OR MIT"
repository = "https://github.com/madsmtm/objc2"

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
rustc-args = [
    "--cfg",
    "docsrs",
]
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-ios-macabi",
    "aarch64-apple-visionos",
]

[features]
AppleUSBDefinitions = []
IOUSBHostFamilyDefinitions = []
IOUSBLib = [
    "objc2-core-foundation/CFPlugInCOM",
    "objc2-core-foundation/CFRunLoop",
    "objc2-core-foundation/CFUUID",
]
USB = []
USBSpec = []
alloc = []
bitflags = ["dep:bitflags"]
block2 = ["dep:block2"]
default = [
    "std",
    "AppleUSBDefinitions",
    "IOUSBHostFamilyDefinitions",
    "IOUSBLib",
    "USB",
    "USBSpec",
    "bitflags",
    "block2",
    "dispatch2",
    "graphics",
    "hid",
    "hidsystem",
    "libc",
    "objc2",
    "usb",
]
dispatch2 = ["dep:dispatch2"]
graphics = [
    "objc2-core-foundation/CFDictionary",
    "objc2-core-foundation/CFPlugInCOM",
    "objc2-core-foundation/CFUUID",
]
hid = [
    "bitflags",
    "objc2-core-foundation/CFArray",
    "objc2-core-foundation/CFDate",
    "objc2-core-foundation/CFDictionary",
    "objc2-core-foundation/CFPlugInCOM",
    "objc2-core-foundation/CFRunLoop",
    "objc2-core-foundation/CFSet",
    "objc2-core-foundation/CFUUID",
]
hidsystem = [
    "objc2-core-foundation/CFArray",
    "objc2-core-foundation/CFDictionary",
]
libc = ["dep:libc"]
objc2 = [
    "dep:objc2",
    "dispatch2?/objc2",
    "objc2-core-foundation/objc2",
]
std = ["alloc"]
usb = []

[lib]
name = "objc2_io_kit"
path = "src/lib.rs"

[dependencies.bitflags]
version = "2.5.0"
features = ["std"]
optional = true
default-features = false

[dependencies.block2]
version = ">=0.6.1, <0.8.0"
features = ["alloc"]
optional = true
default-features = false

[dependencies.dispatch2]
version = ">=0.3.0, <0.5.0"
features = [
    "alloc",
    "block2",
]
optional = true
default-features = false

[dependencies.libc]
version = "0.2.80"
optional = true
default-features = false

[dependencies.objc2]
version = ">=0.6.1, <0.8.0"
features = ["std"]
optional = true
default-features = false

[dependencies.objc2-core-foundation]
version = "0.3.1"
features = [
    "CFArray",
    "CFData",
    "CFDictionary",
    "CFPlugInCOM",
    "CFRunLoop",
    "CFURL",
    "CFUUID",
]
default-features = false

[lints.clippy]
ptr_as_ptr = "warn"
redundant_feature_names = "allow"

[lints.clippy.cargo]
level = "warn"
priority = -1

[lints.rust]
elided_lifetimes_in_paths = "warn"
missing_copy_implementations = "warn"
non_ascii_idents = "deny"
unreachable_pub = "warn"
unsafe_op_in_unsafe_fn = "deny"
