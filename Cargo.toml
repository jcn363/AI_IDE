[workspace]
resolver = "2"

members = [
  # Temporarily removed for hakari initialization
  # "workspace-hack",
  "crates/rust-ai-ide-security-monitoring",
  "crates/rust-ai-ide-ai-analysis",
  "crates/rust-ai-ide-ai-codegen",
  "crates/rust-ai-ide-ai-quantization",
  "crates/rust-ai-ide-config",
  "crates/rust-ai-ide-dsl-codegen",
  "crates/rust-ai-ide-ai-inference",
  "crates/rust-ai-ide-ai-learning",
  "crates/rust-ai-ide-ai-refactoring",
  "crates/rust-ai-ide-ai-specgen",
  "crates/rust-ai-ide-ai",
  "crates/rust-ai-ide-cache",
  "crates/rust-ai-ide-cargo",
  "crates/rust-ai-ide-collaboration",
  # "crates/rust-ai-ide-monitoring",
  "crates/rust-ai-ide-performance",
  "crates/rust-ai-ide-performance-monitoring",
  "crates/rust-ai-ide-cloud-feature-flags",
  "crates/rust-ai-ide-common",
  "crates/rust-ai-ide-core-ai",
  "crates/rust-ai-ide-core-file",
  "crates/rust-ai-ide-core-fundamentals",
  "crates/rust-ai-ide-core-metrics",
  "crates/rust-ai-ide-core-shell",
  "crates/rust-ai-ide-core",
  "crates/rust-ai-ide-debugger",
  "crates/rust-ai-ide-derive-utils",
  "crates/rust-ai-ide-errors",
  "crates/rust-ai-ide-lsp",
  "crates/rust-ai-ide-plugins",
  "crates/rust-ai-ide-security",
  "crates/rust-ai-ide-shared-codegen",
  "crates/rust-ai-ide-shared-services",
  "crates/rust-ai-ide-shared-types",
  "crates/rust-ai-ide-shared-utils",
  "crates/rust-ai-ide-types",
  "crates/rust-ai-ide-ui",
  "crates/rust-ai-ide-cloud-integrations",
  "crates/rust-ai-ide-webhooks",
  "crates/rust-ai-ide-connectors",
  "crates/rust-ai-ide-supervisor",
  "crates/shared-test-utils",
  # "src-tauri",
  "test-performance-analyzer",
  "test-performance-project",
  "workspace-hack",
  # "integration-tests",
]

[workspace.package]
version = "0.1.0"
edition = "2021"
rust-version = "1.91.0"
authors = ["Rust AI IDE Team"]
license = "MIT OR Apache-2.0"
publish = false

# Explicitly specify SQLite-related dependencies to avoid conflicts
[workspace.dependencies]
# Force all crates to use the same SQLite version
libsqlite3-sys = { version = "0.35.0", default-features = false, features = [
  "bundled",
] }
rusqlite = { version = "^0.37", default-features = false, features = [
  "bundled",
] }

# Common dependencies shared across crates (using caret for flexible versioning)
anyhow = { version = "^1.0.99" }
bytes = "1.10.1"
chrono = { version = "0.4.42", default-features = false, features = [
  "serde",
  "clock",
] }
dirs-next = { version = "^2.0.0" }
filetime = { version = "^0.2.26" }
hex = "0.4.3"
hmac = "0.12.1"
sha2 = "0.10.9"
futures = { version = "^0.3.31" }
governor = { version = "0.10.1" }
lazy_static = "^1.5.0"
log = "^0.4.28"
lru = "0.16.0"
md5 = "^0.8.0"
once_cell = "^1.21.3"
petgraph = "^0.8.2"
semver = { version = "^1.0.26", default-features = false, features = ["serde"] }
serde = { version = "^1.0.219", default-features = false, features = [
  "derive",
] }
serde_json = "^1.0.143"
thiserror = { version = "2.0.16" }
tracing = { version = "0.1.41" }
uuid = { version = "^1.18.1", default-features = false, features = [
  "v4",
  "serde",
] }

# Tauri and system dependencies
blake3 = "^1.8.2"
dashmap = "6.1.0"
lsp-server = { version = "^0.7.9" }
lsp-types = { version = "^0.97.0" }
notify = { version = "^8.2.0", default-features = false, features = ["serde"] }
proc-macro2 = { version = "1.0.101", default-features = false, features = [] }
quote = { version = "1.0.40" }
regex = { version = "1.11.2" }
reqwest = { version = "^0.12.23", default-features = false, features = [
  "json",
  "rustls-tls",
] }
serde_yaml = { version = "0.9.34" }
syn = { version = "2.0.106", default-features = false, features = [
  "parsing",
  "printing",
  "visit",
  "visit-mut",
] }
tauri = { version = "2.8.5", features = [] }
tauri-build = { version = "2.4.1" }
tauri-runtime = "2.8.0"
tempfile = "^3.21.0"
terminal_size = "^0.4.3" # Replacement for deprecated term_size from tokei
tokio = { version = "1.47.1", default-features = false, features = [
  "full",
] } # Performance-critical, keep pinned
tokio-test = { version = "0.4.4" }
tokio-util = { version = "0.7.16" }
toml = "^0.9.5"
tower-lsp = { version = "^0.20" }
validator = { version = "^0.20", default-features = false, features = [
  "derive",
] }
walkdir = { version = "2.5.0" }

# AI/ML dependencies
candle-core = { version = "0.9.1" }
candle-nn = { version = "0.9.1" }
candle-transformers = { version = "0.9.1" }
hf-hub = { version = "0.4.3" }
tokenizers = { version = "0.22.0" }
safetensors = { version = "0.6.2" }

# File system and system utilities
cargo_metadata = { version = "^0.22.0" }
dunce = { version = "^1.0.5" }
fs-err = { version = "^3.1.1" }
path-absolutize = { version = "^3.1.1" }

# Tauri plugins
tauri-plugin-dialog = { version = "^2.4.0" }
tauri-plugin-fs = { version = "^2.4.2" }
tauri-plugin-log = { version = "^2.7", default-features = false, features = [
  "tracing",
] }

# Shared crates within the workspace
async-trait = { version = "^0.1.89" }
cargo-deny = { version = "0.18.4" }
cargo-geiger = { version = "0.13.0" }
color-eyre = { version = "0.6.5" }
criterion = { version = "0.7.0" }
fancy-regex = { version = "0.16.1" }
handlebars = { version = "6.3.2" }
ignore = { version = "^0.4.23" }
moka = { version = "0.12.10", default-features = false, features = ["future"] }
num_cpus = { version = "^1.17.0" }
proc-macro-error = { version = "1.0.4" }
rayon = { version = "^1.11.0" }
rust-ai-ide-errors = { path = "./crates/rust-ai-ide-errors" }
shared-test-utils = { path = "./crates/shared-test-utils" }
rust-ai-ide-types = { path = "./crates/rust-ai-ide-types" }
rust-ai-ide-common = { path = "crates/rust-ai-ide-common", features = [
  "tauri-integrated",
] }
rust-ai-ide-lsp = { path = "crates/rust-ai-ide-lsp", features = [
  "ai",
  "multi-language-lsp",
] }
sysinfo = { version = "0.37.0" }
tokio-stream = { version = "0.1.17" }
tree-sitter = { version = "0.25.9" }
tree-sitter-rust = { version = "0.24.0" }
tree-sitter-javascript = { version = "0.25.0" }
tree-sitter-typescript = { version = "0.23.2" }
tree-sitter-python = { version = "0.23.6" }
tree-sitter-go = { version = "0.25.0" }
tree-sitter-java = { version = "0.23.5" }
tree-sitter-cpp = { version = "0.23.4" }
typetag = { version = "0.2.20" }

# Moved common scattered dependencies
env_logger = "^0.11.8"
heck = "^0.5.0"
rand = "^0.9.2"
strsim = "^0.11"
parking_lot = "^0.12.4"
tracing-subscriber = { version = "^0.3.20", default-features = false, features = [
  "env-filter",
] }

# Color output library as replacement for unmaintained ansi_term
nu-ansi-term = "^0.50.1"

# Workspace hack for dependency deduplication

[profile.dev]
opt-level = 0
debug = true
debug-assertions = true
overflow-checks = true
strip = false
panic = "unwind"
incremental = true
codegen-units = 256

[profile.release]
opt-level = 3
debug = false
debug-assertions = false
overflow-checks = false
strip = true
panic = "unwind"
incremental = false
codegen-units = 1
lto = true

[profile.bench]
opt-level = 3
debug = false
debug-assertions = false
overflow-checks = false
strip = false
incremental = false
codegen-units = 1
lto = true

# Performance analysis profile
[profile.perf]
inherits = "release"
debug = true
strip = false
