[package]
name = "rust-ai-ide-warmup-predictor"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
publish.workspace = true
authors.workspace = true
license.workspace = true
description = "AI Model Warmup Prediction System for Rust AI IDE"

[lib]
crate-type = ["rlib", "cdylib"]

[dependencies]
# Workspace dependencies
tokio = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
anyhow = { workspace = true }
futures = { workspace = true }
tracing = { workspace = true }
chrono = { workspace = true }
async-trait = { workspace = true }
uuid = { workspace = true }
thiserror = { workspace = true }
sysinfo = { workspace = true }

# AI/ML specific
candle-core = { workspace = true }
moka = { workspace = true, features = ["future"] }

# Performance and caching
governor = { workspace = true }
dashmap = { workspace = true }
rand = { workspace = true }
num_cpus = { workspace = true }

# Statistical computations
statrs = "0.16"
ndarray = "0.15"
linregress = "0.5"

# Advanced ML libraries for training and evaluation
smartcore = "0.3"
rustlearn = "0.5"
tensorflow = { version = "0.21", features = ["eager_execution"], optional = true }
torch-sys = { version = "0.8", optional = true }
tch = { version = "0.13", optional = true }

# Optimization algorithms
argmin = { version = "0.9", features = ["serde1"] }

# Genetic algorithms
genevo = "0.8"

# Reinforcement learning
rsrl = "0.8"


# File and system utilities
dirs-next = { workspace = true }
tempfile = { workspace = true }

# Workspace dependencies - common
rust-ai-ide-common = { path = "../rust-ai-ide-common", features = ["validation"] }
rust-ai-ide-shared-types = { path = "../rust-ai-ide-shared-types" }
rust-ai-ide-errors = { path = "../rust-ai-ide-errors" }
rust-ai-ide-security = { path = "../rust-ai-ide-security" }
rust-ai-ide-infra = { path = "../rust-ai-ide-infra" }

# Multi-model orchestrator integration
rust-ai-ide-multi-model-orchestrator = { path = "../rust-ai-ide-multi-model-orchestrator" }

# AI learning for advanced prediction models
rust-ai-ide-ai-learning = { path = "../rust-ai-ide-ai-learning" }

[dev-dependencies]
tokio-test = { workspace = true }
tempfile = { workspace = true }
criterion = { workspace = true }
proptest = "1.0"

[features]
default = []
performance-monitoring = []
advanced-ml-models = []
offline-mode = []
