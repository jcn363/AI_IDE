[package]
name = "rust-ai-ide-predictive-quality"
readme = { workspace = true }
version = "0.1.0"
edition = "2021"
description = "Phase 2.2: Predictive Quality Intelligence - ML-driven vulnerability prediction and automated maintenance forecasting"
license = "MIT"
rust-version = "1.91.0"

[dependencies]
# Core dependencies
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tokio = { version = "1.0", features = ["full"] }
async-trait = "0.1"
chrono = { version = "0.4", features = ["serde"] }
anyhow = "1.0"
thiserror = "1.0"
futures = "0.3"

# Security foundation (Wave 3)
rust-ai-ide-security = { path = "../rust-ai-ide-security", features = ["full-security"] }

# AI/ML infrastructure - integrating with Phase 2.1 and existing AI inferencing
rust-ai-ide-ai-inference = { path = "../rust-ai-ide-ai-inference" }
rust-ai-ide-ai-quantization = { path = "../rust-ai-ide-ai-quantization" }
rust-ai-ide-ai-learning = { path = "../rust-ai-ide-ai-learning" }

# Performance monitoring integration (Phase 1)
rust-ai-ide-performance-monitoring = { path = "../rust-ai-ide-performance-monitoring" }

# LSP service integration
rust-ai-ide-lsp = { path = "../rust-ai-ide-lsp" }

# Common types and validation
rust-ai-ide-types = { path = "../rust-ai-ide-types" }
rust-ai-ide-shared-types = { path = "../rust-ai-ide-shared-types" }
rust-ai-ide-common = { path = "../rust-ai-ide-common", features = ["cache", "rate_limiting"] }

# Cargo metadata integration
cargo_metadata = "0.18"

# Statistical analysis
statrs = "0.16"
csv = "1.3"

# UUID generation
uuid = { version = "^1.18", features = ["v4", "serde"] }

# Caching infrastructure
moka = { version = "0.12", features = ["future"] }

# Logging
log = "0.4"
env_logger = "0.10"

# Metrics collection
prometheus = "0.13"
lazy_static = "1.4"

# Hash functions for pattern analysis
blake3 = "1.5"

[features]
default = ["ml_predictions", "health_scoring"]
ml_predictions = []
health_scoring = []
benchmarking = []
experimental = []

[dev-dependencies]
tokio-test = "0.4"
mockall = "0.11"
proptest = "1.4"
criterion = { version = "0.5", features = ["html_reports"] }
tempfile = "3.10"


[lib]
name = "rust_ai_ide_predictive_quality"
readme = { workspace = true }
path = "src/lib.rs"

[[bench]]
name = "health_scoring"
readme = { workspace = true }
harness = false
path = "benches/health_scoring.rs"

[[bench]]
name = "integration_performance"
readme = { workspace = true }
harness = false
path = "benches/integration_performance.rs"