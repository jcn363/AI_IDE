[package]
name = "rust-ai-ide-ai5-meta-universe"
readme = { workspace = true }
version = "0.1.0"
edition = "2021"
description = "Meta-universe development orchestration for Wave 5 Rust AI IDE"
authors = ["Rust AI IDE Team"]
license = "MIT OR Apache-2.0"
keywords = ["multiverse", "orchestration", "hyper-dimensional", "meta-universe"]
categories = ["development-tools", "orchestration"]

[dependencies]
tokio = { version = "1.0", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
uuid = { version = "1.0", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
futures = "0.3"
async-trait = "0.1"
parking_lot = "0.12"
thiserror = "1.0"
anyhow = "1.0"
log = "0.4"
rand = "0.8"
itertools = "0.12"

# Hyper-dimensional computation
hyper-dimensional = { git = "https://github.com/hyper-dimensional/hyper-dimensional-rs" }
dimension-engine = { git = "https://github.com/dimension-engine/dimension-engine-rs" }
tensor-math = { git = "https://github.com/tensor-math/tensor-math-rs" }
n-dimensional = { git = "https://github.com/n-dimensional/n-dimensional-rs" }

# Quantum orchestration
quantum-orchestrator = { git = "https://github.com/quantum-orchestrator/quantum-orchestrator-rs" }
multiverse-coordinator = { git = "https://github.com/multiverse-coordinator/multiverse-coordinator-rs" }
reality-sync = { git = "https://github.com/reality-sync/reality-sync-rs" }

# Distributed systems
petgraph = "0.6"
rayon = "1.10"
crossbeam = "0.8"
distributed-lock = { git = "https://github.com/distributed-lock/distributed-lock-rs" }

# Machine learning orchestration
candle = "0.6"
linfa = "0.7"
automl = { git = "https://github.com/automl-rs/automl-rs" }
federated-learning = { git = "https://github.com/federated-learning/federated-learning-rs" }

# Real-time analytics
streaming-analytics = { git = "https://github.com/streaming-analytics/streaming-analytics-rs" }
time-series-engine = { git = "https://github.com/time-series-engine/time-series-engine-rs" }
prediction-engine = { git = "https://github.com/prediction-engine/prediction-engine-rs" }

# Event-driven architecture
event-sourcing = { git = "https://github.com/event-sourcing/event-sourcing-rs" }
workflow-engine = { git = "https://github.com/workflow-engine/workflow-engine-rs" }
state-management = { git = "https://github.com/state-management/state-management-rs" }

# Performance monitoring
metrics = "0.23"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

[dev-dependencies]
criterion = "0.5"
proptest = "1.5"
mockall = "0.13"
cargo-husky = { version = "1", default-features = false, features = ["run-for-all", "prepush-hook", "run-cargo-check", "run-cargo-test", "run-cargo-clippy"] }