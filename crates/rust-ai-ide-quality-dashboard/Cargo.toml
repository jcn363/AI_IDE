[package]
name = "rust-ai-ide-quality-dashboard"

version = "0.1.0"
edition = "2021"
description = "Phase 3.4: Quality Intelligence Dashboard - Interactive real-time quality metrics visualization with trend analysis and team collaboration"
license = "MIT OR Apache-2.0"
publish = false
rust-version = "1.91.0"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
# Core async runtime
tokio = { version = "1.47.1", features = ["full"] }
tokio-util = "0.7.16"
async-trait = "0.1.89"
futures = "^0.3.31"
tokio-stream = "0.1.15"

# Serialization
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.143"

# Caching infrastructure
moka = { version = "0.12", features = ["future"] }

# Concurrent data structures
parking_lot = { version = "0.12.4", features = ["serde"] }
dashmap = "6.1.0"

# Error handling and logging
anyhow = "1.0"
thiserror = "1.0"

# Path and filesystem utilities
walkdir = "2.5.0"
ignore = "0.4.23"

# Time and date handling
chrono = { version = "0.4.42", features = ["serde"] }

# Statistical analysis and time series
statrs = "0.18.0"
ndarray = "0.15.6"
ndarray-stats = "0.5.1"

# Graph analysis for dependency relationships
petgraph = { version = "0.6.4", features = ["serde-1"] }

# Database integration (SQLite with enforced version)
rusqlite = { workspace = true, features = ["bundled"] }

# Tauri integration
tauri = { version = "2.0.0-rc.9", optional = true }
tauri-build = { version = "2.0.0-rc.6", optional = true }

# Integration with existing phases (commented out due to workspace issues)
# rust-ai-ide-predictive-maintenance = { path = "../rust-ai-ide-predictive-maintenance" }
# rust-ai-ide-real-time-analysis = { path = "../rust-ai-ide-real-time-analysis" }
# rust-ai-ide-predictive-quality = { path = "../rust-ai-ide-predictive-quality" }
# rust-ai-ide-collaboration = { path = "../rust-ai-ide-collaboration" }
# rust-ai-ide-ui = { path = "../rust-ai-ide-ui" }

# Common types and validation (commented out due to workspace issues)
# rust-ai-ide-types = { path = "../rust-ai-ide-types" }
# rust-ai-ide-shared-types = { path = "../rust-ai-ide-shared-types" }
# rust-ai-ide-common = { path = "../rust-ai-ide-common", features = ["validation"] }
# rust-ai-ide-errors = { path = "../rust-ai-ide-errors" }

# Event systems and orchestration (commented out due to workspace issues)
# rust-ai-ide-orchestration = { path = "../rust-ai-ide-orchestration" }
# rust-ai-ide-performance = { path = "../rust-ai-ide-performance" }

[features]
default = ["dashboard-engine", "trend-analysis", "collaboration", "ui-integration"]
dashboard-engine = ["real-time-analysis"]
trend-analysis = ["forecasting"]
collaboration = ["session-management"]
ui-integration = ["tauri"]
real-time-analysis = []
forecasting = []
session-management = []
experimental = []

[dev-dependencies]
tokio-test = "0.4.4"
mockall = "0.12.1"
criterion = { version = "0.7.0", features = ["html_reports"] }
tempfile = "3.10.1"
proptest = "1.4.0"
fake = "2.9.2"

[[bench]]
name = "dashboard_performance_benchmark"

harness = false

[[bench]]
name = "metric_collection_benchmark"

harness = false
