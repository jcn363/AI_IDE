apiVersion: apps/v1
kind: Deployment
metadata:
  name: rust-ai-ide-ai-inference
  labels:
    app: rust-ai-ide
    component: ai-inference
    version: v1.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rust-ai-ide
      component: ai-inference
  template:
    metadata:
      labels:
        app: rust-ai-ide
        component: ai-inference
    spec:
      # Security Context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 2001

      containers:
      - name: ai-inference
        image: rust-ai-ide/ai-inference:latest
        ports:
        - containerPort: 8000
          name: api
        - containerPort: 9091
          name: metrics

        # Resource requests and limits (higher for AI workloads)
        resources:
          requests:
            memory: "1Gi"
            cpu: "1000m"
          limits:
            memory: "2Gi"
            cpu: "2000m"

        # GPU resources for distributed AI processing
        resources:
          requests:
            nvidia.com/gpu: 1
          limits:
            nvidia.com/gpu: 1
            memory: "8Gi"
            cpu: "4000m"

        # Health checks for AI service
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3

        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 15
          failureThreshold: 5

        # Environment variables
        env:
        - name: RUST_LOG
          value: "info"
        - name: MODEL_CACHE_DIR
          value: "/home/ai-user/models"
        - name: REDIS_URL
          value: "redis://rust-ai-ide-redis-service:6379"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
           valueFrom:
             fieldRef:
               fieldPath: metadata.namespace
        - name: NVIDIA_VISIBLE_DEVICES
           value: "all"
        - name: NVIDIA_DRIVER_CAPABILITIES
           value: "compute,utility"
        - name: CUDA_VISIBLE_DEVICES
           value: "0"
        - name: TORCH_USE_CUDA_DSA
           value: "1"
        - name: DISTRIBUTED_INFERENCE_ENABLED
           value: "true"
        - name: MODEL_SHARDING_ENABLED
           value: "true"
        - name: WORKER_ID
           valueFrom:
             fieldRef:
               fieldPath: metadata.name

        # Volume mounts for model persistence
        volumeMounts:
        - name: ai-config-volume
          mountPath: /home/ai-user/config.yaml
          subPath: config.yaml
        - name: model-storage
          mountPath: /home/ai-user/models

      # Config and storage volumes
      volumes:
      - name: ai-config-volume
        configMap:
          name: rust-ai-ide-ai-config
      - name: model-storage
        persistentVolumeClaim:
          claimName: ai-models-pvc

      # Node affinity for GPU nodes
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: nvidia.com/gpu.present
                operator: In
                values:
                - "true"
          - weight: 10
            preference:
              matchExpressions:
              - key: accelerate/gpu-instance-type
                operator: In
                values:
                - "A100"
                - "V100"
                - "T4"

      # Tolerations for GPU-specific nodes
      tolerations:
      - key: "nvidia.com/gpu"
        operator: "Equal"
        value: "present"
        effect: "NoSchedule"
      - key: "accelerate.ai/gpu-node"
        operator: "Exists"
        effect: "NoSchedule"

---
apiVersion: v1
kind: Service
metadata:
  name: rust-ai-ide-ai-service
  labels:
    app: rust-ai-ide
    component: ai-inference
spec:
  selector:
    app: rust-ai-ide
    component: ai-inference
  ports:
  - name: api
    port: 8000
    targetPort: 8000
    protocol: TCP
  - name: metrics
    port: 9091
    targetPort: 9091
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ai-models-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rust-ai-ide-ai-config
data:
  config.yaml: |
    server:
      host: "0.0.0.0"
      port: 8000
      max_concurrent_requests: 50
      request_timeout_ms: 60000
    inference:
      batch_size: 32
      max_batch_time_ms: 100
      model_cache_size_mb: 1024
      enable_model_warmup: true
    models:
      codellama:
        name: "codellama-7b"
        path: "/home/ai-user/models/codellama"
        cache: true
        max_memory_mb: 512
        parallel_requests: 4
      starcoder:
        name: "starcoder-3b"
        path: "/home/ai-user/models/starcoder"
        cache: true
        max_memory_mb: 256
        parallel_requests: 8
    cache:
      redis_url: "redis://rust-ai-ide-redis-service:6379"
      ttl_seconds: 3600
      enable_distributed: true
    monitoring:
      enable_metrics: true
      metrics_interval: 30
      export_prometheus: true
      prometheus_port: 9091
    resource_monitor:
      enable: true
      memory_threshold_mb: 1024
      cpu_threshold_percent: 80
      disk_threshold_mb: 512
    logging:
      level: "info"
      format: "json"
    cloud:
      enable_feature_flags: true
      model_download_url: "${MODEL_REGISTRY_URL}"